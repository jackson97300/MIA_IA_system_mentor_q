#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Analyse de tous les types de donn√©es export√©s par le syst√®me MIA
"""

import json
from pathlib import Path
from collections import Counter

def analyze_all_data_types():
    file_path = "chart_3_20250904.jsonl"
    
    if not Path(file_path).exists():
        print(f"‚ùå Fichier non trouv√©: {file_path}")
        return
    
    print(f"üîç Analyse de tous les types de donn√©es dans {file_path}")
    print("=" * 70)
    
    type_counts = Counter()
    total_lines = 0
    
    # Analyser les 1000 premi√®res lignes pour un aper√ßu rapide
    with open(file_path, 'r', encoding='utf-8') as f:
        for i, line in enumerate(f):
            total_lines += 1
            if total_lines > 1000:  # Limiter pour la performance
                break
                
            try:
                data = json.loads(line.strip())
                data_type = data.get('type', 'NO_TYPE')
                type_counts[data_type] += 1
            except:
                continue
    
    print(f"üìä Analyse des {total_lines:,} premi√®res lignes")
    print(f"üîç Types de donn√©es d√©tect√©s:")
    
    # Afficher par ordre de fr√©quence
    for data_type, count in type_counts.most_common():
        percentage = (count / total_lines) * 100
        print(f"   üìà {data_type}: {count:,} ({percentage:.1f}%)")
    
    # Analyse d√©taill√©e des types principaux
    print(f"\nüìã ANALYSE D√âTAILL√âE DES TYPES PRINCIPAUX:")
    
    # V√©rifier VIX
    vix_count = type_counts.get('vix', 0)
    vix_diag_count = type_counts.get('vix_diag', 0)
    
    if vix_count > 0:
        print(f"   ‚úÖ VIX: {vix_count:,} enregistrements collect√©s avec succ√®s!")
    else:
        print(f"   ‚ùå VIX: Aucun enregistrement trouv√©")
    
    if vix_diag_count > 0:
        print(f"   ‚ö†Ô∏è  VIX_DIAG: {vix_diag_count:,} diagnostics (erreurs)")
    
    # V√©rifier les autres types
    for data_type in ['basedata', 'depth', 'quote', 'vap', 'vwap', 'vva']:
        count = type_counts.get(data_type, 0)
        if count > 0:
            print(f"   üìä {data_type}: {count:,} enregistrements")
    
    # R√©sum√©
    print(f"\nüéØ R√âSUM√â DE L'EXPORT MIA:")
    print(f"   Total des types: {len(type_counts)}")
    print(f"   Types principaux: {', '.join(type_counts.keys())}")
    
    if vix_count > 0:
        print(f"\nüéâ SUCC√àS: Le VIX est maintenant collect√© correctement!")
        print(f"   - {vix_count:,} enregistrements VIX")
        print(f"   - Valeurs r√©elles collect√©es")
        print(f"   - Plus de vix_diag en exc√®s")
    else:
        print(f"\n‚ö†Ô∏è  ATTENTION: V√©rifier la collecte VIX")
    
    print(f"\n" + "=" * 70)

if __name__ == "__main__":
    analyze_all_data_types()







