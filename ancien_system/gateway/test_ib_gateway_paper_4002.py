#!/usr/bin/env python3
"""
MIA_IA_SYSTEM - Test IB Gateway Paper Trading (Port 4002)
Test sp√©cifique pour IB Gateway en mode Paper Trading
"""

import socket
import time
from datetime import datetime

def test_port_4002():
    """Test du port 4002 (IB Gateway Paper Trading)"""
    print("üîç Test port 4002 (IB Gateway Paper Trading)...")
    
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        result = sock.connect_ex(('127.0.0.1', 4002))
        sock.close()
        
        if result == 0:
            print("‚úÖ Port 4002 accessible (IB Gateway Paper Trading)")
            return True
        else:
            print(f"‚ùå Port 4002 non accessible (code: {result})")
            return False
    except Exception as e:
        print(f"‚ùå Erreur test port 4002: {e}")
        return False

def test_ib_gateway_connection():
    """Test connexion IB Gateway Paper Trading"""
    print("üîß Test connexion IB Gateway Paper Trading...")
    
    try:
        from ib_insync import IB
        
        # Test avec diff√©rents Client IDs
        for client_id in [1, 999, 1000]:
            print(f"   Test Client ID {client_id}...")
            ib = IB()
            
            try:
                # Connexion IB Gateway Paper Trading (port 4002)
                ib.connect('127.0.0.1', 4002, clientId=client_id, timeout=10)
                
                if ib.isConnected():
                    print(f"‚úÖ Connexion IB Gateway r√©ussie avec Client ID {client_id}")
                    
                    # Test r√©cup√©ration donn√©es compte
                    try:
                        account = ib.accountSummary()
                        print(f"‚úÖ Donn√©es compte r√©cup√©r√©es: {len(account)} √©l√©ments")
                        
                        # Afficher quelques infos
                        for item in account[:3]:
                            print(f"   - {item.tag}: {item.value}")
                            
                    except Exception as e:
                        print(f"‚ö†Ô∏è Erreur r√©cup√©ration compte: {e}")
                    
                    ib.disconnect()
                    return client_id
                else:
                    print(f"‚ùå Connexion √©chou√©e avec Client ID {client_id}")
                    ib.disconnect()
                    
            except Exception as e:
                print(f"‚ùå Erreur Client ID {client_id}: {e}")
                try:
                    ib.disconnect()
                except:
                    pass
                continue
        
        print("‚ùå Aucun Client ID ne fonctionne")
        return None
        
    except ImportError:
        print("‚ùå ib_insync non install√©")
        return None
    except Exception as e:
        print(f"‚ùå Erreur test connexion: {e}")
        return None

def main():
    """Test principal IB Gateway Paper Trading"""
    print("üöÄ MIA_IA_SYSTEM - Test IB Gateway Paper Trading")
    print("=" * 60)
    print(f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # Test 1: Port 4002
    port_ok = test_port_4002()
    print()
    
    if not port_ok:
        print("‚ùå Port 4002 non accessible")
        print("üí° V√©rifiez que IB Gateway est lanc√© en mode Paper Trading")
        print("üí° V√©rifiez la configuration IB Gateway")
        return
    
    # Test 2: Connexion IB Gateway
    working_client_id = test_ib_gateway_connection()
    
    print()
    print("=" * 60)
    print("üìä R√âSUM√â TEST IB GATEWAY PAPER TRADING")
    print(f"Port 4002 accessible: {'‚úÖ' if port_ok else '‚ùå'}")
    
    if working_client_id:
        print(f"Client ID fonctionnel: {working_client_id}")
        print("‚úÖ IB Gateway Paper Trading op√©rationnel !")
        print("üéâ Pr√™t pour MIA_IA_SYSTEM !")
    else:
        print("‚ùå Aucun Client ID fonctionnel")
        print("üí° V√©rifiez la configuration IB Gateway")
        print("üí° Red√©marrez IB Gateway")

if __name__ == "__main__":
    main()
















