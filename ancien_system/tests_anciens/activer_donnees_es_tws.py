#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üìä ACTIVATION DONN√âES ES TWS - MIA_IA_SYSTEM
Guide pour activer les donn√©es ES dans TWS
"""

import time
from datetime import datetime

def creer_guide_activation_es():
    """Cr√©er guide d'activation des donn√©es ES"""
    print("üìä Cr√©ation guide activation donn√©es ES...")
    
    guide = """
# üîß GUIDE ACTIVATION DONN√âES ES DANS TWS
# Suivez ces √©tapes pour activer les donn√©es ES

## √âTAPE 1: SOUSCRIRE AUX DONN√âES ES
1. Dans TWS, allez dans "Market Data" (en haut √† gauche)
2. Tapez "ES" dans la barre de recherche
3. S√©lectionnez "ES Sep19'25 @CME" (le contrat visible dans votre TWS)
4. Cliquez sur "Add to Market Data" ou le bouton "+"
5. V√©rifiez que le prix 6468.50 s'affiche

## √âTAPE 2: V√âRIFIER LA SOUSCRIPTION
1. Dans TWS, regardez la section "Market Data"
2. Vous devriez voir "ES Sep19'25 @CME" avec le prix en temps r√©el
3. Le prix doit √™tre diff√©rent de "---" ou "N/A"

## √âTAPE 3: CONFIGURATION API
1. File ‚Üí Global Configuration ‚Üí API ‚Üí Settings
2. ‚úÖ Enable ActiveX and Socket Clients: OUI
3. ‚úÖ Socket port: 7497
4. ‚úÖ Allow connections from localhost: OUI
5. ‚úÖ Download open orders on connection: OUI
6. ‚úÖ Include FX positions in portfolio: OUI

## √âTAPE 4: RED√âMARRER TWS
1. Fermez TWS compl√®tement
2. Relancez TWS
3. Reconnectez-vous
4. V√©rifiez que les donn√©es ES sont toujours visibles

## √âTAPE 5: TESTER L'API
1. Lancez le script de test
2. Le prix ES devrait maintenant √™tre r√©cup√©r√©

# IMPORTANT: Les donn√©es ES doivent √™tre visibles dans TWS AVANT que l'API puisse les r√©cup√©rer !
"""
    
    with open('guide_activation_es_tws.txt', 'w', encoding='utf-8') as f:
        f.write(guide)
    
    print("‚úÖ Guide activation ES sauvegard√©")
    return True

def test_prix_es_apres_activation():
    """Test prix ES apr√®s activation"""
    print("üîó Test prix ES apr√®s activation...")
    
    try:
        from ib_insync import IB, Future
        
        ib = IB()
        
        # Configuration TWS
        host = '127.0.0.1'
        port = 7497
        client_id = 999
        timeout = 30
        
        print(f"üîó Connexion: {host}:{port}, Client ID: {client_id}")
        
        try:
            ib.connect(host, port, clientId=client_id, timeout=timeout)
            
            if ib.isConnected():
                print("‚úÖ Connexion TWS r√©ussie !")
                
                # Test ES Sep19'25 (contrat visible dans votre TWS)
                try:
                    print("\nüìã Test ES Sep19'25 @CME...")
                    
                    contract = Future('ES', '20250919', 'CME')
                    ib.reqMktData(contract)
                    
                    # Attendre plus longtemps pour les donn√©es
                    print("‚è≥ Attente donn√©es ES (10 secondes)...")
                    time.sleep(10)
                    
                    tickers = ib.tickers()
                    if tickers:
                        for ticker in tickers:
                            if ticker.contract.symbol == 'ES':
                                prix = ticker.marketPrice()
                                bid = ticker.bid
                                ask = ticker.ask
                                volume = ticker.volume
                                
                                print(f"   üí∞ Prix ES: {prix}")
                                print(f"   üìä Bid/Ask: {bid}/{ask}")
                                print(f"   üìà Volume: {volume}")
                                
                                if prix and prix > 0 and prix != float('nan'):
                                    print("   üéâ SUCC√àS ! Prix ES r√©cup√©r√© !")
                                    print(f"   üìà Prix actuel: {prix}")
                                    
                                    ib.disconnect()
                                    return True, {
                                        'symbol': 'ES',
                                        'date': '20250919',
                                        'exchange': 'CME',
                                        'price': prix,
                                        'bid': bid,
                                        'ask': ask,
                                        'volume': volume
                                    }
                                else:
                                    print("   ‚ùå Prix ES toujours invalide")
                                    print("   üí° V√©rifiez que ES est souscrit dans TWS")
                    
                    print("   ‚ö†Ô∏è Aucune donn√©e ES re√ßue")
                    ib.disconnect()
                    return False, None
                    
                except Exception as e:
                    print(f"   ‚ö†Ô∏è Erreur test ES: {e}")
                    ib.disconnect()
                    return False, None
            else:
                print("‚ùå Connexion TWS √©chou√©e")
                ib.disconnect()
                return False, None
                
        except Exception as e:
            print(f"‚ùå Erreur connexion: {e}")
            return False, None
            
    except ImportError:
        print("‚ùå ib_insync non disponible")
        return False, None
    except Exception as e:
        print(f"‚ùå Erreur g√©n√©rale: {e}")
        return False, None

def main():
    print("üìä ACTIVATION DONN√âES ES TWS - MIA_IA_SYSTEM")
    print(f"‚è∞ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("üéØ Activation des donn√©es ES dans TWS")
    print("=" * 60)
    
    # √âtape 1: Cr√©er guide
    creer_guide_activation_es()
    
    print("\nüìã GUIDE D'ACTIVATION CR√â√â")
    print("1. Ouvrez 'guide_activation_es_tws.txt'")
    print("2. Suivez les √©tapes pour activer ES dans TWS")
    print("3. V√©rifiez que le prix 6468.50 s'affiche dans TWS")
    print("4. Relancez ce script pour tester")
    
    # √âtape 2: Test apr√®s activation
    print("\nüîó Test prix ES apr√®s activation...")
    success, data = test_prix_es_apres_activation()
    
    # R√©sum√©
    print("\n" + "=" * 60)
    print("üìä R√âSUM√â ACTIVATION ES")
    
    if success and data:
        print("üéâ SUCC√àS ! Prix ES r√©cup√©r√©:")
        print(f"   - Contrat: {data['symbol']} {data['date']} @{data['exchange']}")
        print(f"   - Prix: {data['price']}")
        print(f"   - Bid/Ask: {data['bid']}/{data['ask']}")
        print(f"   - Volume: {data['volume']}")
        
        print("\nüöÄ MIA_IA_SYSTEM PR√äT POUR PRODUCTION !")
        
        # Sauvegarder configuration
        with open('config_es_actif.py', 'w', encoding='utf-8') as f:
            f.write(f"""# Configuration ES Actif - MIA_IA_SYSTEM
ES_ACTIVE_CONFIG = {{
    'symbol': '{data['symbol']}',
    'date': '{data['date']}',
    'exchange': '{data['exchange']}',
    'price': {data['price']},
    'bid': {data['bid']},
    'ask': {data['ask']},
    'volume': {data['volume']},
    'status': 'ACTIVE'
}}

# Statut: ‚úÖ Donn√©es ES activ√©es et r√©cup√©r√©es
# Source: TWS Paper Trading
""")
        print("‚úÖ Configuration ES sauvegard√©e dans 'config_es_actif.py'")
        
    else:
        print("‚ùå Prix ES toujours non disponible")
        print("\nüîß ACTIONS REQUISES:")
        print("1. Ouvrez TWS")
        print("2. Allez dans 'Market Data'")
        print("3. Tapez 'ES' et ajoutez 'ES Sep19'25 @CME'")
        print("4. V√©rifiez que le prix 6468.50 s'affiche")
        print("5. Relancez ce script")
        
        print("\nüìñ Consultez 'guide_activation_es_tws.txt' pour les d√©tails")

if __name__ == "__main__":
    main()

