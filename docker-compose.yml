# ðŸš€ MIA IA SYSTEM - Docker Compose
# Orchestration complÃ¨te du systÃ¨me de trading MIA
# Version: Production Ready v1.0

version: '3.8'

services:
  # Service principal MIA
  mia-bot:
    build: .
    container_name: mia-trading-bot
    restart: unless-stopped
    
    # Variables d'environnement
    environment:
      - MIA_ENV=production
      - MIA_LOG_LEVEL=INFO
      - TZ=Europe/Paris
      - PYTHONUNBUFFERED=1
    
    # Volumes pour persistance des donnÃ©es
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./DATA_SIERRA_CHART:/app/DATA_SIERRA_CHART
      - ./results:/app/results
      - ./config_files:/app/config_files
      - ./temp:/app/temp
    
    # RÃ©seau
    networks:
      - mia-network
    
    # Ressources
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Service Syncthing pour synchronisation
  syncthing:
    image: syncthing/syncthing:latest
    container_name: mia-syncthing
    restart: unless-stopped
    
    # Variables d'environnement
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    
    # Volumes
    volumes:
      - ./syncthing/config:/var/syncthing/config
      - ./syncthing/data:/var/syncthing/data
      - ./MIA_SHARED:/var/syncthing/MIA_SHARED
    
    # Ports
    ports:
      - "8384:8384"  # Interface web Syncthing
      - "22000:22000"  # Synchronisation
    
    # RÃ©seau
    networks:
      - mia-network
    
    # Ressources
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Service monitoring (optionnel)
  monitoring:
    image: prom/prometheus:latest
    container_name: mia-monitoring
    restart: unless-stopped
    
    # Configuration
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    
    # Ports
    ports:
      - "9090:9090"
    
    # RÃ©seau
    networks:
      - mia-network
    
    # Commande
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

# RÃ©seaux
networks:
  mia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes persistants
volumes:
  prometheus_data:
    driver: local
