#!/usr/bin/env python3
"""
TEST RAPIDE IB GATEWAY
MIA_IA_SYSTEM - Test connexion imm√©diat
"""
import asyncio
import sys
from pathlib import Path

sys.path.append(str(Path(__file__).parent))

from core.ibkr_connector import IBKRConnector

async def test_ib_gateway_rapide():
    """Test rapide de connexion IB Gateway"""
    
    print("üîß TEST RAPIDE IB GATEWAY")
    print("=" * 40)
    
    # Configuration bas√©e sur la documentation
    config = {
        'ibkr_host': '127.0.0.1',
        'ibkr_port': 4002,  # Port IB Gateway
        'ibkr_client_id': 999,  # Client ID fixe document√©
        'connection_timeout': 30,  # Timeout r√©duit
        'simulation_mode': False,
        'require_real_data': True,
        'use_ib_insync': True  # Utiliser ib_insync comme document√©
    }
    
    print(f"üìç Connexion √† {config['ibkr_host']}:{config['ibkr_port']}")
    print(f"üÜî Client ID: {config['ibkr_client_id']}")
    print(f"‚è±Ô∏è Timeout: {config['connection_timeout']}s")
    
    try:
        # Cr√©er connecteur
        connector = IBKRConnector(config)
        
        # Test connexion
        print("\nüîó Tentative connexion...")
        success = await connector.connect()
        
        if success:
            print("‚úÖ CONNEXION R√âUSSIE!")
            
            # Test donn√©es march√©
            print("\nüìä Test donn√©es march√©...")
            market_data = await connector.get_market_data("ES")
            
            if market_data:
                print("‚úÖ Donn√©es march√© re√ßues:")
                print(f"   Prix: {market_data.get('price', 'N/A')}")
                print(f"   Volume: {market_data.get('volume', 'N/A')}")
                print(f"   Bid: {market_data.get('bid', 'N/A')}")
                print(f"   Ask: {market_data.get('ask', 'N/A')}")
            else:
                print("‚ö†Ô∏è Pas de donn√©es march√©")
            
            # D√©connexion propre
            await connector.disconnect()
            print("\n‚úÖ Test termin√© avec succ√®s")
            return True
            
        else:
            print("‚ùå √âCHEC CONNEXION")
            print("V√©rifier:")
            print("  - IB Gateway d√©marr√© sur port 4002")
            print("  - Client ID 999 disponible")
            print("  - Configuration API activ√©e")
            return False
            
    except Exception as e:
        print(f"‚ùå ERREUR: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_ib_gateway_rapide())
    
    if success:
        print("\nüéâ IB GATEWAY OP√âRATIONNEL!")
        print("Le syst√®me MIA_IA_SYSTEM peut maintenant se connecter")
    else:
        print("\nüîß PROBL√àME D√âTECT√â")
        print("V√©rifier la configuration IB Gateway")
























