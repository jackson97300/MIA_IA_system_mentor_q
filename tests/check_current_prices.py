#!/usr/bin/env python3
"""
üîç V√âRIFICATION PRIX ACTUELS - ES/NQ
====================================

Script pour v√©rifier les prix actuels des indices ES et NQ
et comparer avec les donn√©es du diagnostic.
"""

import sys
import asyncio
from pathlib import Path

# Ajouter le chemin du projet
sys.path.append(str(Path(__file__).parent))

from core.logger import get_logger
from core.ibkr_connector import IBKRConnector

logger = get_logger(__name__)

async def check_current_prices():
    """V√©rifie les prix actuels ES/NQ"""
    logger.info("üîç V√âRIFICATION PRIX ACTUELS ES/NQ")
    logger.info("=" * 50)
    
    try:
        # Connexion IBKR
        ibkr_connector = IBKRConnector()
        await ibkr_connector.connect()
        
        if not ibkr_connector.is_connected():
            logger.error("‚ùå Impossible de se connecter √† IBKR")
            return
        
        logger.info("‚úÖ Connexion IBKR √©tablie")
        
        # V√©rification ES
        logger.info("üìà V√©rification ES (S&P 500):")
        es_data = await ibkr_connector.get_orderflow_market_data('ES')
        if es_data:
            es_price = es_data.get('price', 0)
            es_volume = es_data.get('volume', 0)
            es_delta = es_data.get('delta', 0)
            
            logger.info(f"   üí± Prix actuel: {es_price}")
            logger.info(f"   üìä Volume: {es_volume}")
            logger.info(f"   üìà Delta: {es_delta}")
            
            # Comparaison avec diagnostic
            diagnostic_price = 6479.5
            price_diff = abs(es_price - diagnostic_price)
            price_diff_pct = (price_diff / diagnostic_price) * 100
            
            logger.info(f"   üîç Comparaison diagnostic:")
            logger.info(f"      Diagnostic: {diagnostic_price}")
            logger.info(f"      Actuel: {es_price}")
            logger.info(f"      Diff√©rence: {price_diff:.2f} ({price_diff_pct:.2f}%)")
            
            if price_diff_pct > 5:
                logger.warning(f"   ‚ö†Ô∏è Diff√©rence importante d√©tect√©e!")
            else:
                logger.info(f"   ‚úÖ Prix coh√©rent")
        else:
            logger.error("‚ùå Impossible de r√©cup√©rer les donn√©es ES")
        
        # V√©rification NQ
        logger.info("üìä V√©rification NQ (NASDAQ):")
        nq_data = await ibkr_connector.get_orderflow_market_data('NQ')
        if nq_data:
            nq_price = nq_data.get('price', 0)
            nq_volume = nq_data.get('volume', 0)
            nq_delta = nq_data.get('delta', 0)
            
            logger.info(f"   üí± Prix actuel: {nq_price}")
            logger.info(f"   üìä Volume: {nq_volume}")
            logger.info(f"   üìà Delta: {nq_delta}")
            
            # Comparaison avec diagnostic
            diagnostic_price = 23549.0
            price_diff = abs(nq_price - diagnostic_price)
            price_diff_pct = (price_diff / diagnostic_price) * 100
            
            logger.info(f"   üîç Comparaison diagnostic:")
            logger.info(f"      Diagnostic: {diagnostic_price}")
            logger.info(f"      Actuel: {nq_price}")
            logger.info(f"      Diff√©rence: {price_diff:.2f} ({price_diff_pct:.2f}%)")
            
            if price_diff_pct > 5:
                logger.warning(f"   ‚ö†Ô∏è Diff√©rence importante d√©tect√©e!")
            else:
                logger.info(f"   ‚úÖ Prix coh√©rent")
        else:
            logger.error("‚ùå Impossible de r√©cup√©rer les donn√©es NQ")
        
        # V√©rification avec vos donn√©es
        logger.info("üéØ V√âRIFICATION AVEC VOS DONN√âES:")
        logger.info(f"   üìà ES attendu: 6425")
        logger.info(f"   üìä NQ attendu: 23333")
        
        if es_data and nq_data:
            es_current = es_data.get('price', 0)
            nq_current = nq_data.get('price', 0)
            
            es_diff = abs(es_current - 6425)
            nq_diff = abs(nq_current - 23333)
            
            logger.info(f"   üìà ES actuel: {es_current} (diff: {es_diff:.2f})")
            logger.info(f"   üìä NQ actuel: {nq_current} (diff: {nq_diff:.2f})")
            
            if es_diff > 50 or nq_diff > 100:
                logger.warning("   ‚ö†Ô∏è Diff√©rences importantes avec vos donn√©es!")
            else:
                logger.info("   ‚úÖ Prix coh√©rents avec vos donn√©es")
        
        # D√©connexion
        await ibkr_connector.disconnect()
        logger.info("‚úÖ D√©connexion IBKR")
        
    except Exception as e:
        logger.error(f"‚ùå Erreur v√©rification prix: {e}")

if __name__ == "__main__":
    asyncio.run(check_current_prices())

