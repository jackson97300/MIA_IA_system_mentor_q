#!/usr/bin/env python3
"""
MIA_IA_SYSTEM - Lancement Timeout Corrig√©
Lance le syst√®me avec timeout r√©duit
"""

import os
import sys
import asyncio
from datetime import datetime

# Ajouter le r√©pertoire racine au path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def lance_systeme_timeout_corrige():
    """Lance le syst√®me avec timeout corrig√©"""
    
    print("MIA_IA_SYSTEM - LANCEMENT TIMEOUT CORRIG√â")
    print("=" * 60)
    print("üîß Timeout r√©duit √† 30s")
    print("üéØ Port TWS 7497 confirm√©")
    print("=" * 60)
    
    try:
        # Configuration optimis√©e
        import config.automation_config as auto_config
        
        # R√©duire timeout
        auto_config.IBKR_TIMEOUT = 30  # 30 secondes au lieu de 60
        auto_config.IBKR_HOST = "127.0.0.1"
        auto_config.IBKR_PORT = 7497  # TWS confirm√© actif
        auto_config.IBKR_CLIENT_ID = 1
        
        print("‚úÖ Configuration timeout appliqu√©e:")
        print(f"   Host: {auto_config.IBKR_HOST}")
        print(f"   Port: {auto_config.IBKR_PORT}")
        print(f"   Client ID: {auto_config.IBKR_CLIENT_ID}")
        print(f"   Timeout: {auto_config.IBKR_TIMEOUT}s")
        
        print("\nüöÄ LANCEMENT SYST√àME...")
        print("=" * 40)
        
        start_time = datetime.now()
        print(f"‚è∞ D√©marrage: {start_time.strftime('%H:%M:%S')}")
        
        # Lancer le syst√®me principal
        from launch_24_7_orderflow_trading import main
        
        print("‚úÖ Syst√®me lanc√© avec succ√®s !")
        print("‚è∞ Timeout r√©duit - Connexion plus rapide")
        print("üõë Appuyez sur Ctrl+C pour arr√™ter")
        
        # Lancer le syst√®me
        await main()
        
    except KeyboardInterrupt:
        print("\nüõë Arr√™t demand√© par l'utilisateur")
    except ImportError as e:
        print(f"‚ùå Erreur import: {e}")
    except Exception as e:
        print(f"‚ùå Erreur lancement: {e}")
    finally:
        end_time = datetime.now()
        duration = end_time - start_time
        print(f"\nüìä Dur√©e totale: {duration.total_seconds():.1f} secondes")
        print("‚úÖ Test termin√©")

if __name__ == "__main__":
    asyncio.run(lance_systeme_timeout_corrige())






