#!/usr/bin/env python3
"""
MIA_IA_SYSTEM - Lancement Session London SANS Options
Configuration optimis√©e pour trading sans donn√©es options SPX
"""

import os
import sys
import json
from datetime import datetime
from pathlib import Path

# Ajouter le r√©pertoire racine au path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from core.logger import get_logger

logger = get_logger(__name__)

def create_no_options_config():
    """Cr√©er la configuration sans options"""
    
    config = {
        "session_info": {
            "session": "LONDON_NO_OPTIONS",
            "start_time": datetime.now().isoformat(),
            "options_disabled": True,
            "reason": "Donn√©es options non disponibles/qualit√© insuffisante"
        },
        "feature_weights": {
            "volume_confirmation": 0.35,        # Renforc√©
            "vwap_trend_signal": 0.22,          # Renforc√©
            "sierra_pattern_strength": 0.22,    # Renforc√©
            "smart_money_strength": 0.17,       # Renforc√©
            "level_proximity": 0.10,            # Renforc√©
            "es_nq_correlation": 0.10,          # Renforc√©
            "order_book_imbalance": 0.21,       # Renforc√©
            "session_context": 0.04,            # Renforc√©
            "pullback_quality": 0.02,           # Renforc√©
            # gamma_levels_proximity: D√âSACTIV√â
            # options_flow_bias: D√âSACTIV√â
        },
        "risk_management": {
            "risk_multiplier": 0.8,             # R√©duit
            "signal_threshold": 0.75,           # Plus √©lev√©
            "max_position_size": 0.7,           # R√©duit
            "max_daily_loss": 400.0,            # Conservateur
            "max_trades_per_day": 15            # R√©duit
        },
        "trading_config": {
            "session": "london",
            "focus": "Trend continuation (sans options)",
            "risk_level": "Moderate",           # R√©duit de High
            "volume": "Elev√©",
            "key_levels": [
                "VWAP Bands",
                "Volume Imbalance", 
                "Sierra Patterns",
                "Smart Money Flow"
            ]
        }
    }
    
    return config

def save_no_options_config(config):
    """Sauvegarder la configuration sans options"""
    config_dir = Path("data/preparation/sessions_20250812")
    config_dir.mkdir(parents=True, exist_ok=True)
    
    config_file = config_dir / "london_no_options_config.json"
    
    with open(config_file, 'w') as f:
        json.dump(config, f, indent=2)
    
    logger.info(f"‚úÖ Configuration sans options sauvegard√©e: {config_file}")
    return config_file

def launch_london_no_options():
    """Lancer la session London sans options"""
    
    logger.info("üöÄ Lancement Session London SANS Options")
    logger.warning("‚ö†Ô∏è ATTENTION: Trading sans donn√©es options SPX")
    logger.info("üìä Features renforc√©es: Volume, VWAP, Sierra, Smart Money")
    
    # 1. Cr√©er la configuration sans options
    config = create_no_options_config()
    
    # 2. Sauvegarder la configuration
    config_file = save_no_options_config(config)
    
    # 3. Afficher le r√©sum√©
    logger.info("üìä CONFIGURATION SANS OPTIONS:")
    logger.info(f"   üéØ Session: {config['session_info']['session']}")
    logger.info(f"   ‚ö†Ô∏è Options: D√âSACTIV√âES")
    logger.info(f"   üìà Features actives: {len(config['feature_weights'])}")
    logger.info(f"   üõ°Ô∏è Risk multiplier: {config['risk_management']['risk_multiplier']}")
    logger.info(f"   üéØ Signal threshold: {config['risk_management']['signal_threshold']}")
    logger.info(f"   üí∞ Max position: {config['risk_management']['max_position_size']*100}%")
    
    # 4. Lancer le syst√®me principal
    logger.info("üéØ Lancement du syst√®me principal...")
    
    try:
        # Modifier les arguments pour le mode sans options
        sys.argv = [
            'launch_24_7_orderflow_trading.py',
            '--live',  # Mode paper trading
            '--session', 'london',
            '--no-options',  # Nouveau flag
            '--config', str(config_file)
        ]
        
        # Importer et lancer
        from launch_24_7_orderflow_trading import main
        main()
        
    except ImportError as e:
        logger.error(f"‚ùå Erreur import syst√®me principal: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ùå Erreur lancement: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = launch_london_no_options()
    
    if success:
        logger.info("‚úÖ Session London lanc√©e avec succ√®s SANS options")
        logger.info("üí° Le syst√®me utilise les features renforc√©es")
    else:
        logger.error("‚ùå √âchec lancement session London")
        sys.exit(1)






