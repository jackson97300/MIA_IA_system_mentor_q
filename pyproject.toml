[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mia-ia-system"
version = "4.0.0"
description = "Système de trading automatisé MIA avec intégration MenthorQ et Sierra Chart"
authors = [
    {name = "MIA_IA_SYSTEM", email = "mia@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    "asyncio-mqtt>=0.16.0",
    "aiofiles>=23.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "ta-lib>=0.4.0",
    "websockets>=11.0.0",
    "aiohttp>=3.8.0",
    "python-dotenv>=1.0.0",
    "pytz>=2023.3",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
sierra = [
    "pywin32>=306; sys_platform == 'win32'",
    "comtypes>=1.2.0; sys_platform == 'win32'",
]
ibkr = [
    "ibapi>=10.19.0",
    "ib-insync>=0.9.0",
]
ml = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "optuna>=3.3.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.0",
]

[project.scripts]
mia-launch = "mia_ia_system.cli:main"
mia-collector = "mia_ia_system.launchers.collector:main"
mia-test = "mia_ia_system.tests.runner:main"

[project.urls]
Homepage = "https://github.com/your-org/mia-ia-system"
Documentation = "https://github.com/your-org/mia-ia-system/blob/main/README.md"
Repository = "https://github.com/your-org/mia-ia-system.git"
Issues = "https://github.com/your-org/mia-ia-system/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mia_ia_system*"]
exclude = ["tests*", "docs*", "ancien_system*", "archive*"]

[tool.setuptools.package-data]
mia_ia_system = ["config/*.json", "config/*.yaml", "*.md"]

# === BLACK (Code formatting) ===
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | ancien_system
  | archive
)/
'''

# === RUFF (Linting) ===
[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011"]

# === MYPY (Type checking) ===
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ta.*",
    "ibapi.*",
    "ib_insync.*",
    "comtypes.*",
]
ignore_missing_imports = true

# === PYTEST ===
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "sierra: marks tests requiring Sierra Chart",
    "ibkr: marks tests requiring IBKR connection",
]
asyncio_mode = "auto"

# === COVERAGE ===
[tool.coverage.run]
source = ["mia_ia_system"]
omit = [
    "*/tests/*",
    "*/ancien_system/*",
    "*/archive/*",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

