#!/usr/bin/env python3
"""
MIA_IA_SYSTEM - V√©rification rapide TWS
Test rapide de l'√©tat de TWS apr√®s red√©marrage
"""

import os
import sys
import time
import socket
import subprocess
from datetime import datetime

def verifier_port_tws(port=7497, host='127.0.0.1'):
    """V√©rifier si le port TWS est ouvert"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(3)
        result = sock.connect_ex((host, port))
        sock.close()
        return result == 0
    except Exception as e:
        return False

def verifier_processus_tws():
    """V√©rifier si TWS est en cours d'ex√©cution"""
    try:
        # Windows - v√©rifier javaw.exe
        result = subprocess.run(['tasklist', '/FI', 'IMAGENAME eq javaw.exe'], 
                              capture_output=True, text=True, shell=True)
        return 'javaw.exe' in result.stdout
    except Exception as e:
        return False

def verifier_processus_ib():
    """V√©rifier les processus IB"""
    try:
        # V√©rifier tous les processus li√©s √† IB
        result = subprocess.run(['tasklist'], capture_output=True, text=True, shell=True)
        output = result.stdout.lower()
        
        ib_processes = ['javaw.exe', 'ibgateway', 'tws']
        found_processes = []
        
        for process in ib_processes:
            if process in output:
                found_processes.append(process)
        
        return found_processes
    except Exception as e:
        return []

def verifier_tws_rapide():
    """V√©rification rapide de TWS"""
    
    print("üîÑ MIA_IA_SYSTEM - V√âRIFICATION RAPIDE TWS")
    print("=" * 50)
    print("üîç Test rapide apr√®s red√©marrage")
    print(f"‚è∞ {datetime.now().strftime('%H:%M:%S')}")
    print("=" * 50)
    
    # 1. V√âRIFICATION PORT
    print("\nüîå V√©rification port TWS (7497)...")
    if verifier_port_tws():
        print("   ‚úÖ Port 7497 ouvert")
        port_ok = True
    else:
        print("   ‚ùå Port 7497 ferm√©")
        port_ok = False
    
    # 2. V√âRIFICATION PROCESSUS
    print("\nüñ•Ô∏è V√©rification processus TWS...")
    if verifier_processus_tws():
        print("   ‚úÖ Processus TWS (javaw.exe) actif")
        processus_ok = True
    else:
        print("   ‚ùå Processus TWS non trouv√©")
        processus_ok = False
    
    # 3. V√âRIFICATION PROCESSUS IB
    print("\nüè¢ V√©rification processus IB...")
    ib_processes = verifier_processus_ib()
    if ib_processes:
        print(f"   ‚úÖ Processus IB trouv√©s: {', '.join(ib_processes)}")
        ib_ok = True
    else:
        print("   ‚ùå Aucun processus IB trouv√©")
        ib_ok = False
    
    # 4. √âVALUATION GLOBALE
    print("\nüìä √âVALUATION GLOBALE")
    print("=" * 30)
    
    tests_reussis = sum([port_ok, processus_ok, ib_ok])
    total_tests = 3
    
    print(f"‚úÖ Tests r√©ussis: {tests_reussis}/{total_tests}")
    print(f"üìà Taux de r√©ussite: {(tests_reussis/total_tests)*100:.1f}%")
    
    if tests_reussis == 3:
        print("\nüü¢ EXCELLENT - TWS semble fonctionnel")
        print("   ‚Ä¢ Port ouvert")
        print("   ‚Ä¢ Processus actifs")
        print("   ‚Ä¢ Pr√™t pour connexion")
    elif tests_reussis == 2:
        print("\nüü° BON - TWS partiellement fonctionnel")
        print("   ‚Ä¢ La plupart des √©l√©ments OK")
        print("   ‚Ä¢ V√©rification recommand√©e")
    elif tests_reussis == 1:
        print("\nüü† MOYEN - TWS a des probl√®mes")
        print("   ‚Ä¢ Quelques √©l√©ments fonctionnels")
        print("   ‚Ä¢ Actions correctives n√©cessaires")
    else:
        print("\nüî¥ CRITIQUE - TWS non fonctionnel")
        print("   ‚Ä¢ Aucun √©l√©ment fonctionnel")
        print("   ‚Ä¢ Red√©marrage n√©cessaire")
    
    # RECOMMANDATIONS
    print("\nüöÄ RECOMMANDATIONS")
    print("=" * 30)
    
    if not port_ok:
        print("üîå Port ferm√©:")
        print("   ‚Ä¢ Attendre que TWS d√©marre compl√®tement")
        print("   ‚Ä¢ V√©rifier les param√®tres de port")
        print("   ‚Ä¢ Red√©marrer TWS si n√©cessaire")
    
    if not processus_ok:
        print("üñ•Ô∏è Processus manquant:")
        print("   ‚Ä¢ D√©marrer TWS")
        print("   ‚Ä¢ Attendre le chargement complet")
        print("   ‚Ä¢ V√©rifier les param√®tres")
    
    if not ib_ok:
        print("üè¢ Processus IB manquants:")
        print("   ‚Ä¢ V√©rifier que TWS est d√©marr√©")
        print("   ‚Ä¢ V√©rifier les processus syst√®me")
        print("   ‚Ä¢ Red√©marrer si n√©cessaire")
    
    # PLAN D'ACTION
    print("\nüìã PLAN D'ACTION")
    print("=" * 30)
    
    if tests_reussis == 3:
        print("‚úÖ TWS pr√™t - Aucune action requise")
        print("   ‚Ä¢ Vous pouvez maintenant lancer le syst√®me MIA")
    elif tests_reussis >= 2:
        print("‚è≥ Attendre - TWS en cours de d√©marrage")
        print("   ‚Ä¢ Attendre 1-2 minutes suppl√©mentaires")
        print("   ‚Ä¢ Relancer cette v√©rification")
    else:
        print("üîÑ Red√©marrer - TWS n√©cessite un red√©marrage")
        print("   ‚Ä¢ Fermer TWS compl√®tement")
        print("   ‚Ä¢ Red√©marrer TWS")
        print("   ‚Ä¢ Attendre le chargement complet")
        print("   ‚Ä¢ Relancer cette v√©rification")

if __name__ == "__main__":
    verifier_tws_rapide()

