#!/usr/bin/env python3
"""
MIA_IA_SYSTEM - Correction D√©finitive SPX
Corrige d√©finitivement le probl√®me des donn√©es SPX expir√©es
"""

import os
import sys
import shutil
from datetime import datetime

def corriger_definitivement_spx():
    """Corriger d√©finitivement le probl√®me SPX"""
    
    print("üõë MIA_IA_SYSTEM - CORRECTION D√âFINITIVE SPX")
    print("=" * 60)
    print("üéØ Objectif: Forcer l'utilisation des donn√©es SPX fra√Æches")
    print("=" * 60)
    
    # 1. SUPPRIMER L'ANCIEN FICHIER EXPIRE
    print("\nüóëÔ∏è √âTAPE 1: SUPPRESSION FICHIER EXPIRE")
    print("=" * 50)
    
    old_file = "data/options_snapshots/final/spx_final_20250811.csv"
    if os.path.exists(old_file):
        os.remove(old_file)
        print(f"   ‚úÖ Fichier supprim√©: {old_file}")
    else:
        print(f"   ‚ö†Ô∏è Fichier non trouv√©: {old_file}")
    
    # 2. RENOMMER LE FICHIER FRAIS
    print("\nüîÑ √âTAPE 2: RENOMMAGE FICHIER FRAIS")
    print("=" * 50)
    
    fresh_file = "data/options_snapshots/final/spx_fresh_20250814_134727.csv"
    new_file = "data/options_snapshots/final/spx_final_20250814.csv"
    
    if os.path.exists(fresh_file):
        shutil.copy2(fresh_file, new_file)
        print(f"   ‚úÖ Fichier copi√©: {fresh_file} ‚Üí {new_file}")
    else:
        print(f"   ‚ùå Fichier frais non trouv√©: {fresh_file}")
        return False
    
    # 3. CR√âER UN FICHIER AVEC TIMESTAMP ACTUEL
    print("\nüìÖ √âTAPE 3: CR√âATION FICHIER TIMESTAMP ACTUEL")
    print("=" * 50)
    
    current_time = datetime.now()
    current_file = f"data/options_snapshots/final/spx_final_{current_time.strftime('%Y%m%d')}.csv"
    
    if os.path.exists(new_file):
        shutil.copy2(new_file, current_file)
        print(f"   ‚úÖ Fichier cr√©√©: {current_file}")
    else:
        print(f"   ‚ùå Erreur cr√©ation fichier actuel")
        return False
    
    # 4. V√âRIFIER LES FICHIERS FINAUX
    print("\nüìä √âTAPE 4: V√âRIFICATION FICHIERS FINAUX")
    print("=" * 50)
    
    spx_files = []
    for file in os.listdir("data/options_snapshots/final"):
        if file.startswith("spx_final") and file.endswith(".csv"):
            spx_files.append(file)
            file_path = f"data/options_snapshots/final/{file}"
            file_time = datetime.fromtimestamp(os.path.getmtime(file_path))
            age_hours = (datetime.now() - file_time).total_seconds() / 3600
            print(f"   üìÑ {file} - √Çge: {age_hours:.1f}h")
    
    print(f"   üìä Total fichiers SPX: {len(spx_files)}")
    
    # 5. CR√âER UN SCRIPT DE V√âRIFICATION
    print("\nüîç √âTAPE 5: SCRIPT DE V√âRIFICATION")
    print("=" * 50)
    
    verification_script = """
#!/usr/bin/env python3
\"\"\"
V√©rification donn√©es SPX en temps r√©el
\"\"\"

import os
import glob
from datetime import datetime

def verifier_spx_temps_reel():
    \"\"\"V√©rifier les donn√©es SPX en temps r√©el\"\"\"
    
    print("üîç V√©rification donn√©es SPX...")
    
    # Chercher tous les fichiers SPX
    spx_files = glob.glob("data/options_snapshots/final/spx_final_*.csv")
    
    if not spx_files:
        print("‚ùå Aucun fichier SPX trouv√©")
        return False
    
    # Analyser chaque fichier
    for spx_file in spx_files:
        try:
            file_time = datetime.fromtimestamp(os.path.getmtime(spx_file))
            age_hours = (datetime.now() - file_time).total_seconds() / 3600
            
            if age_hours <= 18:
                print(f"‚úÖ {os.path.basename(spx_file)} - Frais ({age_hours:.1f}h)")
                return True
            else:
                print(f"‚ùå {os.path.basename(spx_file)} - Expir√© ({age_hours:.1f}h)")
                
        except Exception as e:
            print(f"‚ö†Ô∏è Erreur v√©rification {spx_file}: {e}")
    
    return False

if __name__ == "__main__":
    success = verifier_spx_temps_reel()
    if success:
        print("\\n‚úÖ Donn√©es SPX fra√Æches disponibles")
    else:
        print("\\n‚ùå Aucune donn√©e SPX fra√Æche trouv√©e")
"""
    
    with open("verifier_spx_temps_reel.py", "w", encoding="utf-8") as f:
        f.write(verification_script)
    
    print("   üìÑ Script de v√©rification cr√©√©: verifier_spx_temps_reel.py")
    
    # 6. TEST IMM√âDIAT
    print("\nüß™ √âTAPE 6: TEST IMM√âDIAT")
    print("=" * 50)
    
    try:
        import subprocess
        result = subprocess.run("python verifier_spx_temps_reel.py", shell=True, capture_output=True, text=True)
        print(result.stdout)
        if result.stderr:
            print(f"‚ö†Ô∏è Erreurs: {result.stderr}")
    except Exception as e:
        print(f"‚ùå Erreur test: {e}")
    
    # R√âSUM√â FINAL
    print("\nüìä R√âSUM√â CORRECTION D√âFINITIVE")
    print("=" * 50)
    print("‚úÖ Ancien fichier expir√© supprim√©")
    print("‚úÖ Fichier frais renomm√©")
    print("‚úÖ Fichier timestamp actuel cr√©√©")
    print("‚úÖ Script de v√©rification cr√©√©")
    print("‚úÖ Test imm√©diat effectu√©")
    
    print("\nüöÄ PROCHAINES √âTAPES")
    print("=" * 50)
    print("1. üîÑ Red√©marrer le syst√®me")
    print("2. ‚úÖ V√©rifier: python verifier_spx_temps_reel.py")
    print("3. üìä Analyser: python analyse_resultats_temps_reel.py")
    
    return True

if __name__ == "__main__":
    success = corriger_definitivement_spx()
    if success:
        print("\nüéâ CORRECTION D√âFINITIVE R√âUSSIE")
        print("Le syst√®me devrait maintenant utiliser les donn√©es SPX fra√Æches")
    else:
        print("\n‚ùå CORRECTION √âCHOU√âE")
        print("V√©rifiez les erreurs ci-dessus")


